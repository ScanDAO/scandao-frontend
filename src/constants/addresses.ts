import { Networks } from "./blockchain";

const BSC_MAINNET = {
    DAO_ADDRESS: "0xe546da3B567E312d3Fb45266694fa3B628F5F5C4",
    SCAN_ADDRESS: "0xaf2cC765A04a3A4B554f368796Cec2B7eAF44746",
    DAL_ADDRESS: "0x73b30bE536168e80BCeF51c9D88d295Ef063431c",
    BUSD_ADDRESS: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    STAKING_ADDRESS: "0xe3959Fc6bF736Cee8F8d21937c304E9E3D9Cd3EF",
    STAKING_HELPER_ADDRESS: "0xA5D8b1c1e8Ea40Cc1736e75Ad575eDD29859A7dD",
    SCAN_BONDING_CALC_ADDRESS: "0xE0F38d6003F68b4594fB09eD9860b0c796411837",
    TREASURY_ADDRESS: "0xeeA3b1b175b9B18Abe2eb7Acd8C810468e0fF7B1",
    ZAPIN_ADDRESS: "0xc669dC61aF974FdF50758d95306e4083D36f1430",
    DISTRIBUTOR: "0x162F77345c19Ae0CC028182A99Ce695733581D8e",
    STAKING_WARMUP_ADDRESS: "0x5cCbb8B16Df0AC34b8d628fA635E03ff22bf2091",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.BSC_MAINNET) return BSC_MAINNET;

    throw Error("Network don't support");
};
