import { Networks } from "./blockchain";

const BSC_MAINNET = {
    DAO_ADDRESS: "0xe546da3B567E312d3Fb45266694fa3B628F5F5C4",
    SCAN_ADDRESS: "0xc1288418De26C3d81407c7E6d7Eb9134cf6dB47D",
    DAL_ADDRESS: "0x63C93a37a67a6d939d74a2A7dbC7C0Da12b9b1Cd",
    BUSD_ADDRESS: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    STAKING_ADDRESS: "0xeAB98d47eF8D208CEA3164361842934F37fa851b",
    STAKING_HELPER_ADDRESS: "0x69f3e1dEb48cB2680623bD36795F6cf707Eabe04",
    SCAN_BONDING_CALC_ADDRESS: "0x2A958e3bb3a2F9639B9bcd45F6D3201890EfD77B",
    TREASURY_ADDRESS: "0x7EE5F629330CAe24D3DF51e0b8A5B5f3AE79aE59",
    ZAPIN_ADDRESS: "0xc669dC61aF974FdF50758d95306e4083D36f1430",
    DISTRIBUTOR: "0xd319ABa5314030028Bf19A0Ebd59b974B891d791",
    STAKING_WARMUP_ADDRESS: "0xb78D8CE7e5d5CB6476fB8770786085497F8a6744",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.BSC_MAINNET) return BSC_MAINNET;

    throw Error("Network don't support");
};
